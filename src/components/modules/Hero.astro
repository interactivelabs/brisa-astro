---
import clsx from "clsx";

import type { Hero, Cta } from "../../../sanity/schemas/types";
import urlForImage from "../../../sanity/utils/urlForImage";

import Container from "../UI/Container.astro";
import InternalLink from "../UI/InternalLink.astro";
import ExternalLink from "../UI/ExternalLink.astro";
import { getClassNames, SanityStylesToVariantStyles } from "../UI/Button";
import type { BaseButtonProps } from "../UI/Button";

interface Props {
  hero: Hero;
}

const { hero } = Astro.props;

console.log(hero.ctas);

const asset = hero.bgImage?.asset;

let heroBgImageUrl = "";
if (asset) {
  heroBgImageUrl = urlForImage(asset).format("webp").url();
}

const getButtonVariantFromStyle = (style?: Cta["style"]): BaseButtonProps => {
  if (!style) return {};

  return SanityStylesToVariantStyles[style];
};
---

<Container
  class={clsx(
    "pt-20 pb-16 text-center lg:pt-32",
    !!heroBgImageUrl && `bg-[url("${heroBgImageUrl}")]`,
  )}
>
  <h1
    class="mx-auto max-w-4xl font-display text-5xl font-medium tracking-tight text-slate-900 sm:text-7xl"
  >
    {hero.largetext?.map((block) => block.text).join(" ")}
  </h1>
  <p class="mx-auto mt-6 max-w-2xl text-lg tracking-tight text-slate-700">
    {hero.content}
  </p>
  <div>
    {
      hero.ctas?.map(
        (cta) =>
          cta.link && (
            <>
              {"internal" in cta.link && (
                <InternalLink
                  link={cta.link}
                  class={getClassNames(getButtonVariantFromStyle(cta.style))}
                />
              )}
              {"external" in cta.link && (
                <ExternalLink
                  link={cta.link}
                  class={getClassNames(getButtonVariantFromStyle(cta.style))}
                />
              )}
            </>
          ),
      )
    }
  </div>
</Container>
